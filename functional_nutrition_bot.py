
import os
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils import executor

API_TOKEN = os.getenv("API_TOKEN")  # Токен берётся из настроек Render

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# --- Блоки сценария и кнопок ---

# 1. /start
WELCOME_TEXT = "Добро пожаловать на авторскую программу по переводу ребенка на функциональное питание!"
START_BTN = "Вы готовы начать программу?"
START_ANSWER_BTN = "Да! Начнем!"

# 2. Ответ на "Да! Начнем!"
FUNC_NUTRITION_TEXT = (
    "Функциональное питание — это питание, которое не просто насыщает организм, но и помогает восстанавливать и поддерживать здоровье: "
    "снижает воспаление, улучшает пищеварение, балансирует микрофлору, укрепляет иммунитет и регулирует поведение."
)
FUNC_NUTRITION_BTN = "Почему дети становятся избирательными в еде?"

# 3. Ответ на "Почему дети становятся избирательными в еде?"
SELECTIVE_EATING_TEXT = (
    "Избирательность в питании — это ситуация, когда ребёнок отказывается от целых групп продуктов или питается очень ограниченно: только макаронами, хлебом, сладким, одним видом супа или вовсе перекусами. "
    "Такое поведение часто беспокоит родителей, ведь от сбалансированного питания напрямую зависит здоровье, развитие и поведение ребёнка.  \n"
    "Существует множество причин, почему возникает избирательность в еде, и одна из них может быть вовсе не очевидной — паразитоз.\n\n"
    "Паразиты и еда: связь, о которой не принято говорить\n"
    "Наличие паразитов в организме ребёнка может напрямую влиять на его пищевое поведение. Некоторые виды (например, острицы, лямблии или аскариды) способны изменять работу желудочно-кишечного тракта, вызывать воспаления и провоцировать отвращение к определённой пище. Например, ребёнок может перестать есть мясо, жирные продукты или вообще любые блюда, вызывающие у него дискомфорт в животе.\n"
    "Нарушения пищеварения, вызванные паразитами — вздутие, нестабильный стул, тошнота — часто фиксируются после определённых продуктов. У ребёнка формируется устойчивая связь: \"я поел это — мне стало плохо\", и он больше этого не ест. Так и появляется выборочность.\n"
    "Кроме того, паразиты активно \"требуют\" простые углеводы — это их основной источник питания. Поэтому у ребёнка может появиться неестественно сильная тяга к сладкому, мучному, выпечке. Постоянное желание \"что-нибудь перекусить\" и игнорирование нормальной еды — тоже возможный сигнал.\n"
    "Когда стоит задуматься о паразитах\n"
    "Если у ребёнка наблюдается избирательность в питании, особенно если она появилась резко или сопровождается другими симптомами (боли в животе, скрип зубами по ночам, зуд в области анального отверстия, раздражительность, частые простуды, сыпи), — стоит проверить его на паразиты.\n\n"
    "Роль семьи и привычек в формировании пищевых предпочтений\n"
    "Ещё один важный фактор — это то, какие пищевые привычки формируются в семье. Если дома часто перекусывают сладким, пьют соки, едят фастфуд, не садятся вместе за стол — у ребёнка не формируется здоровый интерес к разнообразной еде. Он просто не видит и не пробует другой еды. А если родители не едят, например, рыбу, тыкву или гречку, то с высокой вероятностью и ребёнок будет отказываться от этих продуктов.\n"
    "Дети не учатся уговорам — они учатся через пример.\n"
    "Также стоит понимать: если ребёнок постоянно получает \"вкусненькое\" между приёмами пищи — он не будет испытывать нормального чувства голода, а значит, и отказываться от полноценного обеда будет чаще."
)
SELECTIVE_EATING_BTN = (
    "Программа поможет вернуть ребёнку аппетит и расширить пищевые предпочтения — особенно если это сопровождать терпением, режимом и постепенным введением новых продуктов."
)

# 4. Ответ на "Программа поможет вернуть ребёнку аппетит..."
WHAT_TO_DO_BTN = "Что делать?"
WHAT_TO_DO_TEXT = (
    "Моральная поддержка  \n"
    "Когда вы решаете наладить питание ребёнка, важно помнить: вы не просто меняете список продуктов — вы меняете образ жизни. И в этом процессе ребёнку очень нужна ваша поддержка. Не только словами, но и делом.\n"
    "Представьте, как чувствует себя малыш, если он ест гречку с овощами, а рядом кто-то из семьи открывает шоколадку или ест пиццу. Даже взрослым тяжело отказаться от соблазнов, а ребёнку — тем более. Он не понимает, почему \"мне нельзя, а другим можно\". Это не только вызывает внутренний протест, но и чувство обиды, несправедливости, одиночества.\n"
    "Именно поэтому лучше всего, если вся семья хотя бы на время будет придерживаться той же программы питания, что и ребёнок. Пусть дома не будет \"запретных\" продуктов — тогда и у ребёнка не возникнет лишних переживаний или соблазнов.\n"
    "Почему важно переходить на правильное питание всей семьёй\n"
    "✅ Ребёнку легче адаптироваться. Он чувствует, что не один — что это общее дело. Это снимает стресс и сопротивление.\n"
    "✅ Вы подаёте пример. Дети копируют поведение родителей. Если вы с удовольствием едите суп с овощами — ребёнок тоже потянется.\n"
    "✅ Выстраивается доверие. Ребёнок чувствует, что его не наказывают, не ограничивают, а заботятся о его здоровье.\n"
    "✅ Вы тоже улучшаете своё здоровье. Переходя на функциональное питание ради ребёнка, вы в итоге помогаете и себе.\n\n"
    "Когда семья — одна команда, любые перемены даются легче. Пусть ваш пример, терпение и любовь станут главной мотивацией для ребёнка на пути к новому, здоровому образу жизни."
)
FAMILY_BTN = (
    "Когда семья — одна команда, любые перемены даются легче. Пусть ваш пример, терпение и любовь станут главной мотивацией для ребёнка на пути к новому, здоровому образу жизни."
)

# 5. Ответ на "Когда семья — одна команда..."
READY_BTN = "Я готов/-а"
CHOOSE_CASE_TEXT = (
    "Выберите тот кейс, который ближе всего вам подходит:\n"
    "• Кейс №1. Ребёнок ест все что готовит родители. Пример: может иметь зависимость от сладкого и/или мучного. \n"
    "• Кейс №2. Ребёнок с небольшой избирательностью в питании. Пример: ребёнок может есть мясо или рыбу с макаронами, рисом, гречкой может быть зависимым от сладкого и мучного так. Или ребёнок хорошо ест бульон или суп, бешбармак, лагман, каша. \n"
    "• Кейс №3. Ребёнок с большой избирательностью. Пример: ест только перекусами, не ест горячий еды совсем или в рационе только одно горячее блюдо) есть зависимость от сладкого мучного или молочного."
)
CASE1_BTN = "Кейс №1."
CASE2_BTN = "Кейс №2."
CASE3_BTN = "Кейс №3."

# --- Логика маршрутизации по кнопкам ---

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [[KeyboardButton(START_ANSWER_BTN)]]
    await update.message.reply_text(
        WELCOME_TEXT,
        reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.strip()

    if text == START_ANSWER_BTN:
        keyboard = [[KeyboardButton(FUNC_NUTRITION_BTN)]]
        await update.message.reply_text(
            FUNC_NUTRITION_TEXT,
            reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        )
    elif text == FUNC_NUTRITION_BTN:
        keyboard = [[KeyboardButton(SELECTIVE_EATING_BTN)]]
        await update.message.reply_text(
            SELECTIVE_EATING_TEXT,
            reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        )
    elif text == SELECTIVE_EATING_BTN:
        keyboard = [[KeyboardButton(WHAT_TO_DO_BTN)]]
        await update.message.reply_text(
            WHAT_TO_DO_TEXT,
            reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        )
    elif text == WHAT_TO_DO_BTN:
        keyboard = [[KeyboardButton(FAMILY_BTN)]]
        await update.message.reply_text(
            WHAT_TO_DO_TEXT,
            reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        )
    elif text == FAMILY_BTN:
        keyboard = [[KeyboardButton(READY_BTN)]]
        await update.message.reply_text(
            FAMILY_BTN,
            reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        )
    elif text == READY_BTN:
        keyboard = [
            [KeyboardButton(CASE1_BTN)],
            [KeyboardButton(CASE2_BTN)],
            [KeyboardButton(CASE3_BTN)],
        ]
        await update.message.reply_text(
            CHOOSE_CASE_TEXT,
            reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        )
    else:
        await update.message.reply_text("Пожалуйста, используйте кнопки для навигации по программе.")

def main():
    TOKEN = "YOUR_TELEGRAM_BOT_TOKEN"

    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    print("Бот запущен. Для остановки нажмите Ctrl+C")
    app.run_polling()

if __name__ == "__main__":
    main()
